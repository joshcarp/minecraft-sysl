Source[~db]:
    @description =:
      | A database.
      | Stores data.
    !table Foo:
        @description =:
          | A Foo.
          | Represents foo things.
        x <: int:
            @description = "The x value."
        y <: int

    !table Bar:
        @description = "A bar table."
        a <: string [~pk]
        b <: int?:
            @description = "An optional int"
        x <: Foo.x:
            @description = "A foreign key"

    Read:
        return ok <: Foo

A:
    Fetch:
        Source <- Read
        return ok <: A.FetchResponse [dataflow={"A.FetchResponse.ax": "Source.Foo.x", "A.FetchResponse.ay": "Source.Foo.y"}, description="1:1 transform"]

    !type FetchResponse:
        ax <: int
        ay <: int

B:
    Fetch:
        Source <- Read
        return ok <: B.FetchResponse [dataflow={"B.FetchResponse.bx": "Source.Foo.x", "B.FetchResponse.by": "Source.Foo.y"}, description="1:1 transform"]

    !type FetchResponse:
        bx <: int
        by <: int

C:
    FetchA:
        A <- Fetch
        return ok <: C.FetchResponse [dataflow={"C.FetchResponse.cx": "A.FetchResponse.ax", "C.FetchResponse.cy": "A.FetchResponse.ay"}, description="1:1 transform"]

    FetchB:
        B <- Fetch
        return ok <: C.FetchResponse [dataflow={"C.FetchResponse.cx": "B.FetchResponse.bx", "C.FetchResponse.cy": "B.FetchResponse.by"}, description="1:1 transform"]

    # does this should connect to D?
    Fetch:
        . <- FetchA
        . <- FetchB
        return ok <: C.FetchResponse [dataflow={"C.FetchResponse.cx": ["A.FetchResponse.ax", "B.FetchResponse.bx"], "C.FetchResponse.cy": ["A.FetchResponse.ay", "B.FetchResponse.by"]}, description="1:1 transform"]

    !type FetchResponse:
        cx <: int
        cy <: int

D:
    Fetch:
        A <- Fetch
        C <- Fetch
        return ok <: D.FetchResponse [dataflow={"D.FetchResponse.dx": ["A.FetchResponse.ax", "C.FetchResponse.cx"], "D.FetchResponse.dy": ["A.FetchResponse.ay", "C.FetchResponse.cy"]}, description="1:1 transform"]

    !type FetchResponse:
        dx <: int
        dy <: int

Client:
    Do:
        D <- Fetch
        return ok <: Client.Screen [dataflow={"Client.Screen.xx": "D.FetchResponse.dx", "Client.Screen.yy": "D.FetchResponse.dy"}, description="1:1 transform"]

    !type Screen:
        xx <: int
        yy <: int

all:
    all:
        Source
        Client
        A
        B
        C
        D
